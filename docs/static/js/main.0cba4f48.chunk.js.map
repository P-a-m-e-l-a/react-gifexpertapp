{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OAEI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCHfG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAECI,MAAOF,GAFR,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAXM,kBAYXA,GAZW,4CAAH,sDCDVS,EAAc,SAAC,GAAsB,IAArBN,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAa,QAAQC,IAAI,CAACL,KAAIC,QAAOV,QAEpB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECEX,SAACA,GAAc,IAAD,EACXd,mBAAU,CACjCqB,KAAK,GACLe,SAAQ,IAH0B,mBAC9BC,EAD8B,KACvBC,EADuB,KAqBtC,OAdAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAM,SAAAC,GAECH,EAAS,CAELjB,KAAKoB,EACLL,SAAQ,SAKzB,CAACtB,IAEGuB,EDpBuBK,CAAa5B,GAA/Ba,EAHuB,EAG5BN,KAAYe,EAHgB,EAGhBA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAEnDsB,GAAS,mBAAGJ,UAAU,oCAAb,qBACjB,qBAAKA,UAAU,YAAf,SAIYL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADOA,EAAIC,aEhBtBkB,EAAe,WAAM,MAGM3C,mBAAU,CAAC,gBAHjB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAO9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAWA,GADJA,Y,MChB/B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.0cba4f48.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] =useState('');\r\n    const handleInputChange = (e) => { \r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n       \r\n    }\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n       setCategories:PropTypes.func.isRequired\r\n     }\r\n","\r\n\r\n\r\n export   const getGifs = async(category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=3XKa1AzDbjxh94VvTV2EbdBCPCubNhfV`;\r\n        const resp = await fetch (url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map(img => {\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        console.log(gifs);\r\n        return gifs;\r\n    }\r\n    ","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log({id, title, url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className='animate__animated  animate__swing'>{category}</h3>\r\n\r\n           {loading&&<p className='animate__animated  animate__flash' >loading</p>}\r\n    <div className=\"card-grid\">\r\n        \r\n    \r\n    {\r\n                images.map(img => (\r\n                    <GifGridItem \r\n                        key = {img.id}\r\n                    {...img} />\r\n                ))\r\n                \r\n            }\r\n    \r\n    </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const  [state, setstate] = useState( {\r\n        data:[],\r\n        loading:true\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then (imgs => {\r\n               \r\n                    setstate({\r\n             \r\n                        data:imgs,\r\n                        loading:false\r\n                        })\r\n              \r\n                \r\n            })\r\n     },[category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n    \r\nexport const GifExpertApp = () => {\r\n    // const categories = ['Hello Kitty', 'Snoopy', 'Avengers'];\r\n   \r\n    const [categories, setCategories] = useState( ['Hello Kitty']);\r\n    const handleAdd= (e, cat) => {\r\n        setCategories([...categories,cat]);\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr></hr>\r\n           \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key = {category}\r\n                        category ={category}></GifGrid>\r\n\r\n                    ))\r\n                    \r\n                }\r\n\r\n            </ol>\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />, \n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}